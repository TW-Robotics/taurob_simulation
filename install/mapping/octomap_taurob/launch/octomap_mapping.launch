<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
    <arg name="output" default="screen"/>

	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="$(arg output)">
		<param name="resolution" value="0.04" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />
        <param name="base_frame_id" type="string" value="base_link" />
		
		<!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="5.0" />
        <param name="latch" value="false" />

        <!--for ground plane filter -->
        <!--error  Not enought inlier found... entsteht dadurch weil zu wenig Punkte vorhanden sind um eine Ground Plane zu detektieren -->
        <param name="filter_ground" value="false" />
        <param name="ground_filter/plane_distance"  value="0.28" />
        <param name="ground_filter/distance" value="0.1" />

		<!-- define height -->
        <!--param name="pointcloud_max_z"  value="2.30" /-->
        
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/velodyne_points" />
	
	</node>
</launch>
